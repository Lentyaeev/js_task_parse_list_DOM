{"version":3,"sources":["scripts/main.js"],"names":["getEmployees","list","result","employee","push","name","textContent","trim","position","dataset","salary","replace","age","sortList","sort","a","b","setEmployees","sortedList","map","li","i","toLocaleString","nodeList","document","querySelectorAll","employees"],"mappings":";AAAA,aAmCA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjCA,SAASA,EAAaC,GACdC,IADoB,EACpBA,EAAS,GAEQD,EAAAA,EAAAA,GAHG,IAGG,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAlBE,IAAAA,EAAkB,EAAA,MAC3BD,EAAOE,KAAK,CACVC,KAAMF,EAASG,YAAYC,OAC3BC,SAAUL,EAASM,QAAQD,SAC3BE,QAASP,EAASM,QAAQC,OAAOC,QAAQ,QAAS,IAClDC,IAAKT,EAASM,QAAQG,OARA,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAYnBV,OAAAA,EAGT,SAASW,EAASZ,GAChBA,EAAKa,KAAK,SAACC,EAAGC,GAAMA,OAAAA,EAAEN,OAASK,EAAEL,SAGnC,SAASO,EAAahB,EAAMiB,GAC1BA,EAAWC,IAAI,SAACC,EAAIC,GAClBpB,EAAKoB,GAAGf,YAAcc,EAAGf,KACzBJ,EAAKoB,GAAGZ,QAAQD,SAAWY,EAAGZ,SAC9BP,EAAKoB,GAAGZ,QAAQC,OAAS,IAAMU,EAAGV,OAAOY,eAAe,SACxDrB,EAAKoB,GAAGZ,QAAQG,IAAMQ,EAAGR,MAI7B,IAAMW,EAAWC,SAASC,iBAAiB,MACrCC,EAAY1B,EAAauB,GAE/BV,EAASa,GAETT,EAAaM,EAAUG","file":"main.0e13691a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction getEmployees(list) {\n  const result = [];\n\n  for (const employee of list) {\n    result.push({\n      name: employee.textContent.trim(),\n      position: employee.dataset.position,\n      salary: +employee.dataset.salary.replace(/\\$|,/g, ''),\n      age: employee.dataset.age,\n    });\n  }\n\n  return result;\n}\n\nfunction sortList(list) {\n  list.sort((a, b) => b.salary - a.salary);\n}\n\nfunction setEmployees(list, sortedList) {\n  sortedList.map((li, i) => {\n    list[i].textContent = li.name;\n    list[i].dataset.position = li.position;\n    list[i].dataset.salary = '$' + li.salary.toLocaleString('en-Us');\n    list[i].dataset.age = li.age;\n  });\n}\n\nconst nodeList = document.querySelectorAll('li');\nconst employees = getEmployees(nodeList);\n\nsortList(employees);\n\nsetEmployees(nodeList, employees);\n"]}